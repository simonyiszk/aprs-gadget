/*
 * gps.c
 *
 *  Created on: Aug 20, 2022
 *      Author: pali
 */

#include "../../BSP/Inc/gps.h"

volatile uint8_t buf0[84] = {0}, buf1[84] = {0};
volatile uint8_t *rxbuf, *outbuf;

volatile uint8_t char_count = 0;
uint8_t incoming_char = 0;

typedef enum {incomplete, full} sentence_state;
volatile sentence_state nmea_sentence_state = incomplete;

void BSP_GPS_Init(void){
	rxbuf = buf0;
	outbuf = buf1;
	char_count = 0;
	HAL_UART_Receive_IT(&huart1, &incoming_char, 1);
}

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
	rxbuf[char_count] = incoming_char;
	char_count++;

	if(char_count > 83 || incoming_char == '\n'){
		char_count = 0;

		if(rxbuf==buf0){
			outbuf = buf0;
			rxbuf = buf1;
		}else{
			outbuf = buf1;
			rxbuf = buf0;
		}
		nmea_sentence_state = full;
	}

	//HAL_UART_Transmit(&huart2, &incoming_char, 1, 100);
    HAL_UART_Receive_IT(&huart1, &incoming_char, 1);
}

uint8_t BSP_GPS_ReadSentence(char* sentence){
    if(nmea_sentence_state==full){
        strcpy(sentence, (char*) outbuf);
        nmea_sentence_state = incomplete;
        return(strlen(sentence));
    }
    return 0;
}
