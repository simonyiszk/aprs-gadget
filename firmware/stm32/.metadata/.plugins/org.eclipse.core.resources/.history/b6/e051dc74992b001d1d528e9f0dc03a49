/*
 * nmea.c
 *
 *  Created on: Sep 3, 2022
 *      Author: pali
 */

#include <nmea.h>
#include <usart.h>

NMEA_PacketTypeDef NMEA = {0};

extern UART_HandleTypeDef huart1;
extern DMA_HandleTypeDef hdma_usart1_rx;

void NMEA_Receive(void){
	if(!NMEA.transfer_in_progress && !NMEA.packet_available){
		NMEA.transfer_in_progress = 1;
		HAL_UARTEx_ReceiveToIdle_DMA(&huart1, NMEA.packet, 1024);
		__HAL_DMA_DISABLE_IT(&hdma_usart1_rx, DMA_IT_HT);
	}
}

void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
{
	if (huart->Instance == USART1){
		NMEA.packet_available = 1;
		NMEA.end = &NMEA.packet[Size];
		NMEA.transfer_in_progress = 0;
	}
}

uint8_t NMEA_ReadNextSentence(char* sentence){
	static uint8_t* next = NMEA.packet;

	if(NMEA.packet_available){
		while(*next !='\n'){
			*sentence = *next;
			sentence++;
			next++;
		}
		*sentence = '\0';

		if(next==NMEA.end){						//ready to receive and process next packet
			next = NMEA.packet;
			NMEA.packet_available = 0;
		}
	}
	return 0;
}
